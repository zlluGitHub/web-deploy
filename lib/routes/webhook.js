const express=require("express"),router=express.Router(),tools=require("../public/javascripts/tools"),logger=require("../logs/index"),workflow=require("../workflow"),database=require("../database/index.js");router.post("/webhook",(key,res,next)=>{let resBody=key.body;key=key.get("X-Gitee-Token");database.getDeploy(key).then(async body=>{var message,deployState;console.log(body),body&&body.isAuto&&(body.commitBid=tools.getUid(),body.time=tools.dateTime(),await database.updateDeploy(body).then(()=>{console.log(`项目【${body.title}】信息更新成功！`)}),await database.saveCommit({bid:body.commitBid,projectId:body.bid,hookPayload:{isExit:!0,before:resBody.before,after:resBody.after,url:resBody.commits[0].url,added:resBody.commits[0].added,removed:resBody.commits[0].removed,modified:resBody.commits[0].modified,commitId:resBody.after,message:resBody.commits[0].message},activeType:"gitHook"}).then(()=>{console.log(`项目【${body.title}】日志信息创建成功！`)}),await logger.setlog({bid:body.commitBid,log:{message:`开始准备构建【${body.title}】项目，请稍后...`}},!0),await workflow.initWebhook(body,res),await logger.setlog({log:{message:"开始配置项目运行服务环境相关信息，请稍后..."},deployState:{state:0,type:"deploy"},bid:body.commitBid},!0),message=`项目【${body.title}】已构建完成！`,deployState={state:1,type:"deploy"},await logger.setlog({log:{message:message},deployState:deployState,bid:body.commitBid},!0))}),res.json({code:200})}),module.exports=router;