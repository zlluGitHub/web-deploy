const commitSchema=require("../../schema/commit"),shell=require("shelljs"),tools=require("../../public/javascripts/tools"),path=require("path");let setlog=(body,res)=>new Promise((resolve,reject)=>{let conn=global.connect.conn;commitSchema.find({bid:body.commitBid},(error,data)=>{if(error)conn.sendText&&conn.sendText(error),console.log("日志记录获取失败！"),res&&res.json({message:"日志记录获取失败！",error:error,code:500}),process.exit(0);else if(data[0]){let logConent=data[0].log;Array.isArray(body.log)?(body.log.forEach(item=>{item.time=tools.dateTime(),console.log(item.message),conn.sendText&&conn.sendText(item.message)}),logConent=[...logConent,...body.log]):(body.log.time=tools.dateTime(),logConent=[...logConent,body.log],console.log(body.log.message),conn.sendText&&conn.sendText(body.log.message)),commitSchema.updateOne({bid:body.commitBid},{endTime:tools.dateTime(),log:logConent},(error,data)=>{error?(conn.sendText&&conn.sendText(error),res&&res.json({message:"日志记录更新失败！",error:error,code:500}),process.exit(0)):resolve()})}else console.log("暂无找到对应日志记录！"),conn.sendText&&conn.sendText("暂无找到对应日志记录！"),res&&res.json({message:"暂无找到对应日志记录！",code:500}),process.exit(0)})});const handleError=async({data,message,error,res,code,isSetlog})=>{if(data&&(data.log=[{message:message},{message:error}]),"false"!==isSetlog)await setlog(data,res);else{let conn=global.connect.conn;conn.sendText&&conn.sendText(message),conn.sendText&&conn.sendText(error),console.log(message),console.log(error)}res&&res.json({message:message,error:error,code:code||500}),process.exit(0)},handleSuccess=async({message,data,res,code,isSetlog})=>{if(Array.isArray(message)?data.log=message:data.log={message:message},"false"!==isSetlog)await setlog(data,res);else{let conn=global.connect.conn;conn.sendText&&conn.sendText(message),console.log(message)}res&&res.json({message:message,data:data,code:code||200})},exitProcess=code=>{someConditionNotMet()&&(console.log("构建程序成功退出！"),printUsageToStdout(),process.exitCode=1)};module.exports={handleError:handleError,handleSuccess:handleSuccess,exitProcess:exitProcess};