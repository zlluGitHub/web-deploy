#!/usr/bin/env node
const express = require('express')
const app = express()
const path = require('path')
const http = require('http');
const fs = require('fs-extra')
const config = require('../../config.json');
const mongoose = require('mongoose');
const createError = require('http-errors');
global.ws = require("nodejs-websocket")
global.connect = {
  conn: {},
  server: null,
};

global.appServer = {}; 

// 解决刷新页面后 页面404
let history = require('connect-history-api-fallback');
app.use(history());

// 启用 gzip
let compression = require('compression')
app.use(compression());

let bodyParser = require('body-parser');
app.use(bodyParser.json({ limit: '50mb' }));
app.use(bodyParser.urlencoded({ limit: '50mb', extended: true }));

// 路由引入
app.use('/swd/deploy', require('../routes/deploy'));
app.use('/swd/commit', require('../routes/commit'));
app.use('/swd/git', require('../routes/webhook'));
app.use('/swd/fileEdit', require('../routes/fileEdit'));
app.use('/swd/person/oauth', require('../routes/oauth'));
app.use('/swd/person/user', require('../routes/user'));

app.use(express.static(path.join(__dirname, '../../dist')))
app.use(function (req, res, next) {
  let error = createError(404);
  next(error);
});
// error handler
app.use(function (err, req, res, next) {
  let result =
    process.env.NODE_ENV === "development"
      ? {
        error: {
          message: err.message,
          name: error.name,
          stack: err.stack
        }
      }
      : {};

  res.status(err.status || 500);
  res.json(result);
});

// 创建服务
let server = http.createServer(app);
server.listen(config.port)
server.on('error', function () {
  console.log("service startup failed！");
});
server.on('listening', function () {
  console.log("server listening at " + config.port + ' port');
});

let auth = (config.database.username && config.database.password) ? `${config.database.username}:${config.database.password}@` : ""
mongoose.connect(`mongodb://${auth}${config.database.ip}:${config.database.port}/${config.database.name}`, { useNewUrlParser: true, useUnifiedTopology: true }, err => {
  if (err) {
    console.log('Connection Error:' + err);
  } else {
    console.log('数据库连接成功!');
  }
});

//创建文件夹 
if (!fs.existsSync(path.join(__dirname, '../../www'))) {
  fs.mkdirSync(path.join(__dirname, '../../www'));
}

if (!fs.existsSync(path.join(__dirname, '../../backups'))) {
  fs.mkdirSync(path.join(__dirname, '../../backups'));
};
if (!fs.existsSync(path.join(__dirname, '../../backDir'))) {
  fs.mkdirSync(path.join(__dirname, '../../backDir'));
};
