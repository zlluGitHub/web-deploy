const deploySchema=require("../schema/deploy"),commitSchema=require("../schema/commit"),tools=require("../public/javascripts/tools");module.exports={saveDeploy:(body,res)=>new Promise((resolve,reject)=>{body.time=tools.dateTime(),body.isServer=!1,body.gzip=!0,deploySchema.create(body,(err,data)=>{err?(console.log(`项目【${body.title}】信息创建失败！`),console.log(err),res&&res.json({message:err,state:{state:2,type:"start"},code:500})):resolve()})}),saveCommit:(body,res)=>new Promise((resolve,reject)=>{var data={startTime:tools.dateTime(),bid:body.bid||tools.getUid(),endTime:tools.dateTime(),activeType:body.activeType||"init",log:[],projectId:body.projectId,deployState:{state:!1,type:"start"},hookPayload:body.hookPayload||{isExit:!1,before:"",after:"",url:"",added:"",removed:"",modified:"",commitId:"",message:""}};commitSchema.create(data,(err,data)=>{err?(console.log(`项目【${body.title}】日志信息创建失败！`),console.log(err),res&&res.json({message:err,state:{state:2,type:"start"},code:500})):resolve()})}),updateDeploy:(body,res)=>new Promise((resolve,reject)=>{deploySchema.updateOne({bid:body.bid},body,(err,data)=>{err?(console.log(`项目【${body.title}】信息更新失败！`),console.log(err),res&&res.json({message:err,state:{state:2,type:"start"},code:500})):resolve()})}),deleteDeploy:(body,res)=>new Promise((resolve,reject)=>{deploySchema.deleteMany(body,(err,data)=>{err?(console.log(`项目【${body.title}】信息删除失败！`),console.log(err),res&&res.json({message:err,state:{state:2,type:"deploy"},code:500})):resolve()})}),deleteCommit:(body,res)=>new Promise((resolve,reject)=>{commitSchema.deleteMany(body,(err,data)=>{err?(console.log(`项目【${body.title}】日志信息删除失败！`),console.log(err),res&&res.json({message:err,state:{state:2,type:"deploy"},code:500})):resolve(data)})}),getDeploy:(bid,res)=>new Promise((resolve,reject)=>{deploySchema.find({bid:bid},(err,data)=>{err?(console.log(`项目【${body.title}】信息获取失败！`),console.log(err),res&&res.json({code:500})):(console.log(data),resolve(data[0]))})})};