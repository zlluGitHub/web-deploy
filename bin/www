#!/usr/bin/env node
const express=require("express"),app=express(),fs=require("fs-extra"),path=require("path"),config=require("../deploy.config.js"),initAllServer=require("../javascript/index")["initAllServer"];global.store={file:{},origin:"http://127.0.0.1:"+config.port,ws:{},ssh:{},appServer:{}};let history=require("connect-history-api-fallback");app.use(history());let compression=require("compression");app.use(compression());let bodyParser=require("body-parser");app.use(bodyParser.json({limit:"50mb"})),app.use(bodyParser.urlencoded({limit:"50mb",extended:!0})),app.use("/wd/user",require("../routes/user")),app.use("/wd/deploy",require("../routes/deploy")),app.use("/wd/commit",require("../routes/commit")),app.use("/wd/file",require("../routes/fileEdit")),app.use("/wd/git",require("../routes/webhook")),app.use("/wd/oauth",require("../routes/oauth")),app.use(express.static(path.join(__dirname,"../dist")));const http=require("http");let server=http.createServer(app);server.listen(config.port),server.on("error",()=>{console.log("Service startup failed！")}),server.on("listening",()=>{console.log("Server listening at "+config.port+" port")});const ws=require("nodejs-websocket");ws.createServer(conn=>{let bid=conn.path.slice(1,conn.path.length);global.store.ws[bid]=conn,console.log("webSocket 已开启连接！"),conn.on("close",(code,reason)=>{console.log("webSocket 服务已断开！"),global.store.ws[bid]=null}),conn.on("error",(code,reason)=>{console.log("webSocket 服务错误！"),global.store.ws[bid]=null})}).listen(config.ws.port);const mongoose=require("mongoose");let auth=config.mongodb.username&&config.mongodb.password?`${config.mongodb.username}:${config.mongodb.password}@`:"";mongoose.connect(`mongodb://${auth}${config.mongodb.ip}:${config.mongodb.port}/`+config.mongodb.database,{useNewUrlParser:!0,useUnifiedTopology:!0},err=>{err?console.log(err):(initAllServer(),console.log("Mongodb database connection succeeded!"))}),fs.ensureDir(path.join(__dirname,"../project")).catch(err=>{console.log(err)}),fs.ensureDir(path.join(__dirname,"../www")).catch(err=>{console.log(err)});